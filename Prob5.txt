#include <thread>
#include <iostream>
#include <vector>
#include <algorithm>
#include <iterator>

void remove(std::vector<int> & vec, int elem)
{
    vec.erase(std::remove(vec.begin(), vec.end(), elem), vec.end());
}
 
void displayVector(std::vector<int> & vec)
{
   std::vector<int>::iterator it = vec.begin();
   while(it != vec.end())
       std::cout<<(*it++)<<" ";
   std::cout<<std::endl;
}
int main()
{
   std::vector<int> vec{1,2,5,5,5,5,5,4,5,2,2,2,2,3,4,4,2,1,2,6,8,9,9,1,5,7,8,9};
   std::thread t1(remove,std::ref(vec),9);
   std::thread t2(remove,std::ref(vec),5);
   std::thread t3(remove,std::ref(vec),4);
   t1.join();
   t2.join();
	t3.join();
   displayVector(vec);
 
   return 0;
}