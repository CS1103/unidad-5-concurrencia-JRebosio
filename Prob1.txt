#include <chrono>
#include <iostream>
#include <mutex>
#include <numeric>
#include <random>
#include <vector>
#include <future>

using namespace std;
constexpr int sizo= 100;
int sum(const vector<int> &v, int begin, int last){
    int result=0;
    for(int i=begin;i<last;i++)
        result+=v[i];
    return result;
}

int main(){

    std::cout << std::endl;

    vector<int> randValues;
    randValues.reserve(sizo);

    std::random_device seed;
    std::mt19937 engine(seed());
    std::uniform_int_distribution<> uniformDist(1,10);
    for ( long long i=0 ; i< sizo ; ++i) randValues.emplace_back(uniformDist(engine));
     int middle=49,begin=0,end=99;
     auto  sum1 = async(sum,randValues,begin,middle);
     auto sum2 = async(sum,randValues,middle,end);
    int add1=sum1.get();
    int add2=sum2.get();
    cout << "Result: " << add1 + add2 << std::endl;
    cout << std::endl;

}